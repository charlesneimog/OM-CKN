
(:patch
 (:name "Multi threading sound-sequence")
 (:doc "")
 (:info
  (:created "2021/05/31 15:06:35")
  (:modified "2021/06/01 13:07:05")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1920 1026)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference voice)
   (:group-id 2)
   (:name nil)
   (:x 80)
   (:y 182)
   (:w 1784)
   (:h 143)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list -1 -1 -1 -1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "lport") (:value nil) (:reactive nil))
    (:input
     (:type :key)
     (:name "extras")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "lport") (:reactive nil))
    (:output (:name "extras") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:velocity-display :value)
    (:duration-display nil)
    (:grid nil)
    (:selected-analysis pcset-analysis)
    (:analysis t)
    (:group-names t)
    (:selected-group :all)
    (:groups t)
    (:h-stretch 1)
    (:scale :scale-1/8)
    (:font-size 45)
    (:staff :gf)
    (:channel-display :hidden)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 316 12.55)
      (:list 632 16.8)
      (:list 947 21.05)
      (:list 1263 26.8)
      (:list 1579 32.55)
      (:list 1895 36.3)
      (:list 1985 40.157143)
      (:list 2165 43.87143)
      (:list 2346 47.085717)
      (:list 2526 61.300003)
      (:list 2807 64.91112)
      (:list 2947 68.966675)
      (:list 3789 85.30001)
      (:list 4105 91.63335)
      (:list 4184 108.766686)
      (:list 4465 112.8778)
      (:list 4746 116.988915)
      (:list 5026 121.90003)
      (:list 5588 127.92226)
      (:list 5868 132.03337)
      (:list 6149 135.64449)
      (:list 6229 140.26195)
      (:list 6390 143.89687)
      (:list 6550 147.03179)
      (:list 6630 150.84925)
      (:list 6711 164.9667)
      (:list 7002 168.62055)
      (:list 7099 172.50516)
      (:list 7877 178.08208)
      (:list 7974 191.96669)
      (:list 8605 197.46669)
      (:list 8921 201.21669)
      (:list 9079 205.34169)
      (:list 9237 208.96669)
      (:list 9553 212.09169)
      (:list 9868 216.34169)
      (:list 11132 224.34169)
      (:list 11763 239.84169)
      (:list 12016 245.1417)
      (:list 12395 250.4417)
      (:list 12500 254.4417)
      (:list 12711 258.77502)
      (:list 13026 273.825)
      (:list 13658 292.42502)
      (:list 14605 310.67502)
      (:list 15079 316.35)
      (:list 15237 320.775)
      (:list 15553 324.4)
      (:list 15868 334.15)
      (:list 16026 338.275)
      (:list 16184 341.9)
      (:list 16342 345.525)
      (:list 16500 349.15)
      (:list 17132 365.44998)
      (:list 17763 371.74997)
      (:list 17921 387.24997)
      (:list 18320 392.6289)
      (:list 18719 397.20786)
      (:list 19118 401.7868)
      (:list 19517 407.86575)
      (:list 19916 413.9447)
      (:list 20048 417.471)
      (:list 20248 421.26047)
      (:list 20447 431.04993)
      (:list 20763 434.79993)
      (:list 21079 440.3499)
      (:list 21395 444.5999)
      (:list 21711 448.8499)
      (:list 22026 453.0999)
      (:list 22342 456.8499)
      (:list 22432 462.20706)
      (:list 22613 467.42136)
      (:list 22793 470.63565)
      (:list 22883 474.4928)
      (:list 22974 487.34995)
      (:list 23211 501.28745)
      (:list 23351 506.14298)
      (:list 23632 510.2541)
      (:list 23912 513.86524)
      (:list 24053 517.9208)
      (:list 24474 535.88746)
      (:list 25105 547.18744)
      (:list 25263 565.18744)
      (:list 25516 568.68744)
      (:list 26021 574.9874)
      (:list 26274 578.9874)
      (:list 26526 582.9874)
      (:list 26779 588.4874)
      (:list 27032 593.9874)
      (:list 27284 597.4874)
      (:list 27356 601.27314)
      (:list 27501 605.64454)
      (:list 27645 608.71595)
      (:list 27717 612.50165)
      (:list 27789 625.28736)
      (:list 28042 629.78736)
      (:list 28379 634.92066)
      (:list 28491 637.8651)
      (:list 28940 643.1429)
      (:list 29053 658.08735)
      (:list 29211 665.5123)
      (:list 29447 672.4498)
      (:list 29605 687.0748)
      (:list 29921 703.6248)
      (:list 30395 710.4998)
      (:list 30711 716.7498)
      (:list 31026 731.4998)
      (:list 32921 741.9998)
      (:list 33079 756.9248)
      (:list 33332 760.9248)
      (:list 33500 764.0915)
      (:list 33668 767.7582)
      (:list 34174 773.2582)
      (:list 34342 776.92487)
      (:list 34511 780.09156)
      (:list 34679 783.75824)
      (:list 34847 787.9249)
      (:list 35016 791.0916)
      (:list 35184 794.7583)
      (:list 35395 799.0916)
      (:list 35605 809.7249)
      (:list 35858 813.7249)
      (:list 36060 817.0249)
      (:list 36262 821.3249)
      (:list 36464 824.6249)
      (:list 36666 829.72486)
      (:list 36868 834.3248)
      (:list 37037 838.1248)
      (:list 37205 841.2915)
      (:list 37374 845.4582)
      (:list 37542 848.6249)
      (:list 37711 852.79157)
      (:list 37921 856.6249)
      (:list 38132 869.9582)
      (:list 38289 874.0832)
      (:list 39395 891.4582)
      (:list 40026 910.6332)
      (:list 40279 915.6332)
      (:list 40447 918.79987)
      (:list 40616 922.46656)
      (:list 41121 927.96656)
      (:list 41289 931.63324)
      (:list 41458 934.7999)
      (:list 41626 938.4666)
      (:list 41795 942.6333)
      (:list 41963 945.8)
      (:list 42132 949.4667)
      (:list 42342 953.8)
      (:list 42553 967.6333)
      (:list 43816 986.4333)
      (:list 44447 1001.9333)
      (:list 45395 1018.6833)
      (:list 46500 1036.0584))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 51552)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras
        (:list
         (:list -80 80)
         (:list -10 90)
         (:list -90 30)
         (:list -80 50)
         (:list -80 80)
         (:list -80 50)
         (:list -90 30)
         (:list -10 90)
         (:list 0 80)
         (:list -60 55)
         (:list -80 80)
         (:list -30 90)
         (:list -80 50)
         (:list -50 50)
         (:list -33 50)
         (:list -50 33)
         (:list -50 50)
         (:list -80 80)
         (:list -75 75)
         (:list -50 20)
         (:list -70 70)
         (:list -40 20)
         (:list -45 15)
         (:list -40 40)
         (:list -60 30)
         (:list -30 60)
         (:list -10 100)
         (:list -100 100)
         (:list -30 80)
         (:list -80 30)
         (:list -60 60)
         (:list -10 80)
         (:list -80 30)
         (:list -90 10)
         (:list -60 60)
         (:list -80 80)
         (:list -40 60)
         (:list -60 40)
         (:list -60 45)
         (:list -80 50)
         (:list -100 100)
         (:list -40 30)
         (:list -20 80)
         (:list -40 60)
         (:list -50 90)
         (:list -75 75)
         (:list -50 50)
         (:list -30 35)
         (:list -70 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -80 80)
         (:list -35 35)
         (:list -100 100)
         (:list -50 30)
         (:list -50 30)
         (:list -30 80)
         (:list -100 100)
         (:list -40 50)
         (:list -50 40)
         (:list -20 60)
         (:list -20 60)
         (:list -20 60)
         (:list -80 80)
         (:list -30 30)
         (:list -40 40)
         (:list -20 60)
         (:list -100 100)
         (:list -60 20)
         (:list -80 20)
         (:list -100 100)
         (:list -20 80)
         (:list -50 50)
         (:list -30 80)
         (:list -75 75)
         (:list -30 50)
         (:list -80 80)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)))
       (:group-ids nil)
       (:tree
        (:list
         33
         (:list
          (:list
           (:list 4 4)
           (:list 1 1 1 1 1 1 (:list 2 (:list -1 2 2 -2))))
          (:list (:list 2 4) (:list (:list 2 (:list 2 -1 6))))
          (:list (:list 5 32) (:list 4.0 1.0))
          (:list
           (:list 4 4)
           (:list
            (:list
             4
             (:list 1 1 1 2 1 1 (:list 2 (:list -1 2 2 -1 1))))))
          (:list (:list 2 4) (:list (:list 2 (:list 3 -1 8 -1))))
          (:list (:list 6 4) (:list 4 2 -1 1 2.0 -2 -8 -4))
          (:list
           (:list 2 4)
           (:list (:list 1 (:list -2 3)) (:list 1 (:list 1.0 -2 3))))
          (:list (:list 1 4) (:list 1))
          (:list (:list 3 8) (:list 3))
          (:list (:list 2 4) (:list 3 1 2.0 2))
          (:list (:list 2 4) (:list -1 1 1 1 4))
          (:list (:list 5 16) (:list 4 1.0))
          (:list
           (:list 4 4)
           (:list (:list 4 (:list 3 3 3 3 3 1 (:list 3 (:list 1 1))))))
          (:list
           (:list 4 4)
           (:list 1 -1 1 1 1 1 (:list 2 (:list -1 2 2 -1 1))))
          (:list (:list 3 32) (:list -3))
          (:list (:list 2 4) (:list (:list 2 (:list -1 2 2 -1 3))))
          (:list (:list 5 16) (:list 4 1.0))
          (:list
           (:list 4 4)
           (:list
            (:list
             4
             (:list 1 -2 1 1 1 1 1 (:list 2 (:list -1 2 2 -1 1))))))
          (:list
           (:list 2 4)
           (:list (:list 2 (:list -1 (:list 4 (:list 3 1 -4 1))))))
          (:list (:list 7 32) (:list 2 3 2))
          (:list (:list 4 32) (:list -4))
          (:list (:list 7 16) (:list 3 2 2))
          (:list (:list 13 16) (:list -12 -1.0))
          (:list
           (:list 4 4)
           (:list
            (:list 2 (:list 1 (:list 4 (:list 1 -1 -3 1))))
            (:list 2 (:list (:list 4 (:list 1.0 -1 -1 1 -1)) -1 1))))
          (:list
           (:list 4 4)
           (:list
            (:list 2 (:list 1 (:list 4 (:list 1 -1 1 -1 1))))
            (:list 2 (:list (:list 4 (:list 1.0 1 -1 1 -1)) 1 1))))
          (:list (:list 4 8) (:list -1 7))
          (:list (:list 4 16) (:list 4.0))
          (:list
           (:list 4 4)
           (:list
            (:list 2 (:list 1 (:list 4 (:list 1 -1 -3 1))))
            (:list 2 (:list (:list 4 (:list 1.0 -1 -1 1 -1)) -1 1))))
          (:list (:list 4 8) (:list 4))
          (:list (:list 2 8) (:list 2))
          (:list (:list 3 8) (:list 3))
          (:list (:list 7 16) (:list 7))
          (:list (:list 8 4) (:list 8)))))
       (:lmidic
        (:list
         (:list 5000)
         (:list 6100)
         (:list 6550)
         (:list 5200)
         (:list 4800 5502 6550 6969)
         (:list 6200)
         (:list 5700)
         (:list 6400)
         (:list 4800)
         (:list 7700)
         (:list 4900)
         (:list 6400)
         (:list 6500)
         (:list 7500)
         (:list 5400)
         (:list 5600)
         (:list 6300)
         (:list 6550)
         (:list 6700)
         (:list 5100)
         (:list 6000)
         (:list 6700)
         (:list 7000)
         (:list 7700)
         (:list 7514)
         (:list 7750)
         (:list 5400)
         (:list 7314 6290 6549 5531)
         (:list 4100)
         (:list 4900)
         (:list 6200)
         (:list 5300)
         (:list 5686)
         (:list 6002)
         (:list 6198)
         (:list 7775)
         (:list 5000)
         (:list 6100)
         (:list 6550)
         (:list 5200)
         (:list 4800 5502 6550 6969)
         (:list 6200)
         (:list 5700)
         (:list 6400)
         (:list 6700)
         (:list 6100)
         (:list 5000)
         (:list 5200)
         (:list 6550)
         (:list 7902 6550 6969 7200)
         (:list 6200)
         (:list 5700)
         (:list 6300)
         (:list 6700)
         (:list 6200)
         (:list 5500 6633 7507 7889 6771 7205)
         (:list 6550)
         (:list 6100)
         (:list 5000)
         (:list 5200)
         (:list 4800 5502 6550 6969)
         (:list 6200)
         (:list 5700)
         (:list 6300)
         (:list 6700)
         (:list 6400)
         (:list 5400)
         (:list 4500)
         (:list 4800 5502 6550 6969)
         (:list 4900 6200 6755 6969)
         (:list 5000 5502 6550 7425)
         (:list 6100 6550 6969)
         (:list 6200 6755 6969)
         (:list 7028 6550 7425)
         (:list 6300)
         (:list 6700)
         (:list 5500)
         (:list 6450)
         (:list 6650)
         (:list 6300)
         (:list 6500)
         (:list 6700)
         (:list 4900)
         (:list 6500)
         (:list 6400)
         (:list 6500)
         (:list 6700)
         (:list 6925)
         (:list 6300 6500 6400)
         (:list 6700)
         (:list 6450)
         (:list 6650)
         (:list 6500)
         (:list 6500)
         (:list 6300)
         (:list 5500)
         (:list 5800)
         (:list 6525)))
       (:lonset
        (:list
         0
         316
         632
         947
         1263
         1579
         1985
         2165
         2526
         2947
         4184
         4465
         4746
         5026
         5588
         5868
         6229
         6390
         6630
         6711
         7099
         7974
         8605
         9079
         12016
         12711
         13026
         13658
         14605
         15079
         15553
         16026
         16184
         16342
         16500
         17132
         17921
         18320
         18719
         19118
         19517
         19916
         20048
         20248
         20447
         21079
         21395
         21711
         22026
         22432
         22613
         22883
         23351
         23632
         24053
         24474
         25263
         26021
         26274
         26526
         26779
         27032
         27356
         27501
         27717
         28042
         28379
         28940
         29053
         29211
         29447
         29921
         30395
         30711
         33079
         33332
         34174
         34847
         35395
         35605
         35858
         36262
         36666
         37037
         37374
         37711
         37921
         38289
         40026
         40279
         41121
         41795
         42342
         42553
         43816
         44447
         45395
         46500
         51553))
       (:ldur
        (:list
         (:list 315)
         (:list 315)
         (:list 314)
         (:list 315)
         (:list 315 315 315 315)
         (:list 315)
         (:list 179)
         (:list 180)
         (:list 280)
         (:list 1236)
         (:list 280)
         (:list 280)
         (:list 279)
         (:list 561)
         (:list 279)
         (:list 280)
         (:list 160)
         (:list 159)
         (:list 80)
         (:list 290)
         (:list 777)
         (:list 630)
         (:list 315)
         (:list 473)
         (:list 483)
         (:list 314)
         (:list 631)
         (:list 946 946 946 946)
         (:list 473)
         (:list 473)
         (:list 314)
         (:list 157)
         (:list 157)
         (:list 157)
         (:list 631)
         (:list 788)
         (:list 398)
         (:list 398)
         (:list 398)
         (:list 398)
         (:list 398 398 398 398)
         (:list 131)
         (:list 199)
         (:list 198)
         (:list 315)
         (:list 315)
         (:list 315)
         (:list 314)
         (:list 315)
         (:list 180 180 180 180)
         (:list 179)
         (:list 90)
         (:list 280)
         (:list 279)
         (:list 420)
         (:list 788 788 788 788 788 788)
         (:list 252)
         (:list 252)
         (:list 251)
         (:list 252)
         (:list 252 252 252 252)
         (:list 251)
         (:list 144)
         (:list 143)
         (:list 71)
         (:list 336)
         (:list 111)
         (:list 112)
         (:list 157 157 157 157)
         (:list 235 235 235 235)
         (:list 157 157 157 157)
         (:list 473 473 473)
         (:list 315 315 315)
         (:list 314 314 314)
         (:list 252)
         (:list 167)
         (:list 336)
         (:list 168)
         (:list 209)
         (:list 252)
         (:list 201)
         (:list 201)
         (:list 370)
         (:list 167)
         (:list 167)
         (:list 209)
         (:list 210)
         (:list 1736)
         (:list 252 252 252)
         (:list 167)
         (:list 336)
         (:list 167)
         (:list 210)
         (:list 1262)
         (:list 630)
         (:list 947)
         (:list 1104)
         (:list 5052)))
       (:lvel
        (:list
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 40 40 40 40)
         (:list 40)
         (:list 50)
         (:list 60)
         (:list 80)
         (:list 100)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 40)
         (:list 40)
         (:list 30)
         (:list 50)
         (:list 60)
         (:list 70)
         (:list 80)
         (:list 100)
         (:list 20)
         (:list 20)
         (:list 10)
         (:list 40)
         (:list 67)
         (:list 50)
         (:list 90 90 90 90)
         (:list 90)
         (:list 70)
         (:list 50)
         (:list 20)
         (:list 40)
         (:list 50)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 40)
         (:list 50)
         (:list 110 110 110 110)
         (:list 40)
         (:list 50)
         (:list 10)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 50)
         (:list 40 30 50 10)
         (:list 40)
         (:list 50)
         (:list 60)
         (:list 70)
         (:list 30)
         (:list 40 90 90 90 90 90)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 40 30 50 10)
         (:list 40)
         (:list 50)
         (:list 60)
         (:list 70)
         (:list 120)
         (:list 60)
         (:list 70)
         (:list 50 60 70 75)
         (:list 90 90 90 75)
         (:list 50 50 50 80)
         (:list 50 50 50)
         (:list 60 60 60)
         (:list 60 60 60)
         (:list 60)
         (:list 70)
         (:list 100)
         (:list 60)
         (:list 70)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 30)
         (:list 50 50 50)
         (:list 60)
         (:list 70)
         (:list 80)
         (:list 90)
         (:list 30)
         (:list 30)
         (:list 30)
         (:list 30)
         (:list 30)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 25)
         (:list 40)
         (:list 40)
         (:list 25)
         (:list 296 296 296 296)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 296)
         (:list 2021)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 2021)
         (:list 25)
         (:list 296)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 25)
         (:list 296)
         (:list 16)
         (:list 20)
         (:list 2021)
         (:list 296)
         (:list 2021)
         (:list 1997)
         (:list 2021 2021 2021 2021)
         (:list 1997)
         (:list 1997)
         (:list 1997)
         (:list 25)
         (:list 25)
         (:list 40)
         (:list 20)
         (:list 296)
         (:list 1997)
         (:list 40)
         (:list 40)
         (:list 25)
         (:list 270 270 270 270)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 40)
         (:list 25)
         (:list 25)
         (:list 40)
         (:list 296 296 296 296)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 25)
         (:list 1997 296 296 2021 267 270)
         (:list 40)
         (:list 40)
         (:list 25)
         (:list 25)
         (:list 1997 270 296 20)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 270)
         (:list 25)
         (:list 1997)
         (:list 1997 270 296 20)
         (:list 1997 270 296 20)
         (:list 1997 270 296 20)
         (:list 270 296 20)
         (:list 270 296 20)
         (:list 270 296 20)
         (:list 20)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 40)
         (:list 40)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 40)
         (:list 20)
         (:list 20)
         (:list 117)
         (:list 20 20 20)
         (:list 20)
         (:list 20)
         (:list 20)
         (:list 20)
         (:list 64)
         (:list 64)
         (:list 64)
         (:list 64)
         (:list 64)))
       (:lport
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1)
         (:list 0 0 0 0)
         (:list 1 1 1 1)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 1 1 1)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:llegato nil)
       (:tempo 95)))))
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 728)
   (:y 75)
   (:w 50)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 95)
   (:id 1))
  (:comment
   (:x 1694)
   (:y 66)
   (:w 112)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "PAN")
   (:id 2))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 136)
   (:y 49)
   (:w 85)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "ritmo.txt")
   (:id 3))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 379)
   (:y 50)
   (:w 86)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "notas.txt")
   (:id 4))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 906)
   (:y 70)
   (:w 100)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "velocity.txt")
   (:id 5))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1066)
   (:y 62)
   (:w 143)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "channel.txt")
   (:id 6))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1700)
   (:y 82)
   (:w 102)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "pan.txt")
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 82)
       (:y 50)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 276)
       (:y 318)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 147)
       (:w 289)
       (:h 80)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "(((4 4) (1 1 1 1 1 1 (2 (-1 2 2 -2))))) "
             "(((2 4) (2 -1 6)))"
             "(((5 32) (1.0)))"
             "(((4 4) (1 1 1 2 1 1 (2 (-1 2 2 -1 1))))) "
             "(((2 4) (3 -1 8 -1))) "
             "(((3 4) (4 2 -1 1 2.0 -2))) "
             "(((2 4) ((1 (-2 3)) (1 (1.0 -2 3))))) "
             "(((1 4) (1))) "
             "(((3 8) (1))) "
             "(((2 4) (3 1 2.0 2))) "
             "(((2 4) (-1 1 1 1 4))) "
             "(((5 16) (3))) "
             "(((4 4) (3 3 3 3 3 1 (3 (1 1))))) "
             "(((4 4) (1 -1 1 1 1 1 (2 (-1 2 2 -1 1))))) "
             "(((3 32) (-1))) "
             "(((2 4) (-1 2 2 -1 3))) "
             "(((5 16) (1))) "
             "(((4 4) (1 -2 1 1 1 1 1 (2 (-1 2 2 -1 1))))) "
             "(((2 4) (-1 (4 (3 1 -4 1)))))"
             "(((7 32) (2 3 2))) "
             "(((4 32) (-1))) "
             "(((7 16) (3 2 2)))"
             "(((13 16) (-1)))"
             "(((4 4) ((2 (1 (4 (1 -1 -3 1)))) (2 ((6 ((4 (1.0 -1 -1 1 -1)) -1 1)))))))"
             "(((4 4) ((2 (1 (4 (1 -1 1 -1 1)))) (2 ((6 ((4 (1.0 1 -1 1 -1)) 1 1)))))))"
             "(((4 8) (-1 7)))"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 276)
       (:y 257)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 295)
       (:y 215)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 82)
       (:y 100)
       (:w 80)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 104)
   (:y 89)
   (:w 148)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 96)
       (:y 50)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 122)
       (:y 380)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 145)
       (:w 342)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "5000 6100 6550 5200 (4800 5502 6550 6969) 6200 5700 6400 "
             "4800 7700 "
             "4900 6400 6500 (6200 5800 6700 7500) 5400 5600 6300 6550 6700 "
             "5100 6000 "
             "6700 7000 7700 "
             "7514 7750 "
             "5400 "
             "(7314 5090 6549 5531) "
             "4100 4900 6200 "
             "5300 5686 6002 6198 "
             "7775 "
             "5000 6100 6550 5200 (4800 5502 6550 6969) 6200 5700 6400 "
             "6700 6100 5000 5200 6550 (7902 6550 6969 7200) 6200 5700 "
             "6300 6700 6200 "
             "(5500 6633 7507 7889 6771 7205) "
             "6550 6100 5000 5200 (4800 5502 6550 6969) 6200 5700 6300 6700 "
             "6400 5400 4500 "
             "(4800 5502 6550 6969) (4900 6200 6755 6969) (5000 5502 6550 7425) "
             "(6100 6550 6969) (6200 6755 6969) (7028 6550 7425) "
             ""
             "6300 6700 5500 6450 6650 "
             ""
             "6300 6500 6700 4900 6500 6400 6500 6700 "
             "6925"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 122)
       (:y 319)
       (:w 93)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 165)
       (:y 284)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 96)
       (:y 100)
       (:w 80)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 341)
   (:y 93)
   (:w 162)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 9))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 94)
       (:y 50)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 175)
       (:y 341)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 151)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "50 60 20 30 (40 40 40 40) 40 50 60 "
             "80 100 "
             ""
             "50 60 20 (40 30 50 10) 40 30 50 60 70 "
             "80 100 "
             "20 20 10 "
             "40 67 "
             "50"
             "(90 90 90 90) "
             "90 70 50 "
             "20 40 50 50 "
             "60 "
             "20 30 40 50 (110 110 110 110) 40 50 10  "
             "50 60 20 30 50 (40 30 50 10) 40 50 "
             ""
             "60 70 30 "
             "(100 100 100 100 100 100) "
             "50 60 20 30 (40 30 50 10) 40 50 60 70 "
             "120 60 70 "
             "(50 60 70 75) (90 90 90 75) (50 50 50 80) "
             ""
             "(50 50 50) (60 60 60) (60 60 60) "
             ""
             "60 70 100 60 70 "
             ""
             "40 40 40 40 40 40 40 40 "
             "30"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 175)
       (:y 280)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 94)
       (:y 100)
       (:w 80)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 192)
       (:y 245)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 4 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 867)
   (:y 108)
   (:w 178)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 94)
       (:y 50)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 275)
       (:y 330)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 148)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "25 40 40 25 (296 296 296 296) 20 25 20 "
             "296 2021 "
             "25 20 20 (296 296 296 2021) 25 296 25 20 20 "
             "25 296 "
             "16 20 2021 "
             "296 2021 "
             "1997 "
             "(296 296 296 296) "
             "1997 1997 1997 "
             "25 25 40 20 "
             "296 "
             "1997 40 40 25 (270 270 270 270) 20 25 20 20 "
             "40 25 25 40 (296 296 296 296) 20 25 "
             ""
             "20 20 25 "
             "(1997 296 296 2021 267 270) "
             "40 40 25 25 (1997 270 296 20) 20 25 20 20 "
             "270 25 1997 "
             "(1997 270 296 20) (1997 270 296 20) (1997 270 296 20) "
             "(270 296 20) (270 296 20) (270 296 20) "
             ""
             "20 20 25 20 20  "
             "40 40 20 25 20 40 20 20 "
             "296"
             ""))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 275)
       (:y 269)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 292)
       (:y 234)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 94)
       (:y 100)
       (:w 80)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 1047)
   (:y 108)
   (:w 140)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 261)
       (:y 50)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 252)
       (:y 369)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 157)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "(-80 50) (-30 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) (-80 80) "
             "(0 45) (-45 35) "
             "(-80 50) (-30 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) (-80 80) (-75 75) "
             "(-50 20) (-45 15) "
             "(-50 20) (-45 15) (-90 90) "
             "(-80 80) (-80 80) "
             "(-80 80) "
             "(-80 80) "
             "(-80 80) (-80 80) (-80 80) "
             "(-80 80) (-60 80) (-80 30) (-50 60) "
             "(-60 50) "
             "(-70 80) (-80 50) (-50 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) "
             "(-80 80) (-75 75) (-80 50) (-50 75) (-80 50) (-80 50) (-50 50) (-50 50) "
             ""
             "(-50 50) (-80 80) (-75 75) "
             "(-80 50) "
             "(-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50)"
             "(-50 50) (-50 50) (-50 50)  "
             "(-50 50) (-50 50) (-50 50) "
             ""
             "(-50 50) (-30 80) (-80 70) "
             ""
             "(-50 50) (-80 80) (-75 75) (-50 50) (-80 80) "
             "(-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50)"
             "(-50 50)"
             ""
             ""))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 252)
       (:y 308)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 286)
       (:y 272)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 261)
       (:y 100)
       (:w 80)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 1663)
   (:y 121)
   (:w 176)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1412)
   (:y 53)
   (:w 143)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "sustain.txt")
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 94)
       (:y 50)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 275)
       (:y 330)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 148)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "25 40 40 25 (296 296 296 296) 20 25 20 "
             "296 2021 "
             "25 20 20 (296 296 296 2021) 25 296 25 20 20 "
             "25 296 "
             "16 20 2021 "
             "296 2021 "
             "1997 "
             "(296 296 296 296) "
             "1997 1997 1997 "
             "25 25 40 20 "
             "296 "
             "1997 40 40 25 (270 270 270 270) 20 25 20 20 "
             "40 25 25 40 (296 296 296 296) 20 25 "
             ""
             "20 20 25 "
             "(1997 296 296 2021 267 270) "
             "40 40 25 25 (1997 270 296 20) 20 25 20 20 "
             "270 25 1997 "
             "(1997 270 296 20) (1997 270 296 20) (1997 270 296 20) "
             "(270 296 20) (270 296 20) (270 296 20) "
             ""
             "20 20 25 20 20  "
             "40 40 20 25 20 40 20 20 "
             "296"
             ""))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 275)
       (:y 269)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 292)
       (:y 234)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 94)
       (:y 100)
       (:w 80)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 1464)
   (:y 105)
   (:w 140)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 14))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference voice->samples-sound)
   (:group-id nil)
   (:name "voice->samples-sound")
   (:x 89)
   (:y 366)
   (:w 189)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "my-function")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:text
      (:list
       "(lambda (sounds)"
       ""
       "(let* ("
       "        (first-action1 (mapcar (lambda (x) (string+ \"Sound-seq-\" x)) (mapcar (lambda (x) (list->string-fun (list x))) (om::arithm-ser 1 (length sounds) 1))))"
       "        (second-action1 (ckn-make-mail-box first-action1))"
       "        (action1 "
       "            (loop "
       "                :for sound-loop :in sounds"
       "                :for names-loop :in first-action1"
       "                :for mail-box-loop :in second-action1 "
       "                :do "
       "                        (mp:process-run-function names-loop () "
       "                                (lambda (x w) (mp:mailbox-send w "
       "                                                                (sound-seq-list x 0.001)))"
       "                                (print sound-loop) mail-box-loop)))"
       ""
       ""
       ""
       ";; ======================================================"
       ""
       "(action2 "
       "  (loop with mailbox-empty = nil :while "
       "          (setf mailbox-empty (remove nil (mapcar (lambda (x) (mp:mailbox-empty-p x)) second-action1)))"
       "            :do (let*"
       "        ((box-remove (remove nil (mapcar (lambda (x) (mp:mailbox-empty-p x)) second-action1))))"
       "            mailbox-empty)))"
       ""
       ";; ======================================================"
       ""
       "(action3 (mapcar (lambda (x) (mp:mailbox-peek x)) second-action1))"
       ""
       "(action4 (loop :for fim :in action3 :collect (make-value-from-model 'sound fim nil))))"
       ""
       "(sound-seq-list action4 0.001)))"
       ""
       ""
       ""
       ""
       ""
       ""
       ""))))
   (:group-id nil)
   (:name "my-function")
   (:x 249)
   (:y 497)
   (:w 169)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUNDS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 101)
   (:y 572)
   (:w 464)
   (:h 136)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 51358.46)
       (:n-samples 2264908)
       (:n-channels 2)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :back :back :back "OUT-FILES"))
         (:device nil)
         (:host "C")
         (:name "temp-sound3607954")
         (:type "wav")))))))
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 243)
   (:y 405)
   (:w 34)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 30)
   (:id 18))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 450)
   (:y 447)
   (:w 80)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :function)
   (:reference build-seq-of-sounds)
   (:group-id nil)
   (:name "build-seq-of-sounds")
   (:x 140)
   (:y 438)
   (:w 173)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUNDS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUNDS-LENGTH")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 3)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 8 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 9 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 10 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 11 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 12 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 0 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 0 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 0 :in 4))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 0 :in 6))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 0 :in 8))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 0 :in 7)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 1)))))

(:patch
 (:name "Record")
 (:doc "")
 (:info
  (:created "2022/03/23 9:55:17")
  (:modified "2022/03/23 10:11:16")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (1616 666)) (:position (64 64)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :interface)
   (:reference pd-list-patches)
   (:group-id nil)
   (:name "pd-list-patches")
   (:x 101)
   (:y 67)
   (:w 240)
   (:h 156)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection nil)
   (:cell-height 18)
   (:cell-font (:font (:face "Segoe UI") (:size 7) (:style :bold)))
   (:output-mode :value)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:object
     (:class pure-data)
     (:slots
      ((:pd "\"C:\\\\Program Files\\\\Pd\\\\bin\\\\pd.exe\"")
       (:pd-path
        (:pathname
         (:directory
          (:absolute
           "Users"
           "charl"
           "OneDrive_usp.br"
           "Documents"
           "OpenMusic"
           "OM-Libraries"
           "OM-CKN"
           "resources"
           "Pd-Patches"))
         (:device :unspecific)
         (:host "C")
         (:name "Record")
         (:type "pd")))
       (:command-line nil)
       (:pd-outfile nil)))))
   (:items
    (:list
     "SOL-player.pd"
     "SOFA-Binaural.pd"
     "Record.pd"
     "OA.pd"
     "IR-convolution.pd"
     "IR-convolution-v2.pd"
     "data-stream.pd"))
   (:selection (:list 2))
   (:id 0))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference pd~)
   (:group-id nil)
   (:name "pd~")
   (:x 287)
   (:y 317)
   (:w 432)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATCH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "sound-out")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "gui") (:value nil) (:reactive nil))
    (:input
     (:type :key)
     (:name "offline")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "var") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :function)
   (:reference tmpfile)
   (:group-id nil)
   (:name "tmpfile")
   (:x 421)
   (:y 85)
   (:w 96)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 452)
   (:y 50)
   (:w 76)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "t.wav")
   (:id 3))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "value box")
   (:x 478)
   (:y 279)
   (:w 43)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 4))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "value box")
   (:x 561)
   (:y 282)
   (:w 43)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 641)
   (:y 282)
   (:w 100)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list gain 5)))
   (:id 6))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 298)
   (:y 360)
   (:w 399)
   (:h 93)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 3819.6826)
       (:n-samples 168448)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory
          (:relative
           :back
           :back
           :back
           :back
           :back
           :back
           :back
           "Documents"
           "OM#"
           "temp-files"))
         (:device nil)
         (:host "C")
         (:name "t")
         (:type "wav")))))))
   (:id 7))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference sound-denoise-sox)
   (:group-id nil)
   (:name "sound-denoise-sox")
   (:x 409)
   (:y 464)
   (:w 178)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 260)
   (:y 507)
   (:w 475)
   (:h 86)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 3796.4627)
       (:n-samples 167424)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory
          (:relative
           :back
           :back
           :back
           :back
           :back
           :back
           :back
           "Documents"
           "OM#"
           "temp-files"
           "om-ckn"))
         (:device nil)
         (:host "C")
         (:name "Sound-with-Noise000001-denoise")
         (:type "wav")))))))
   (:id 9)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 2)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 3)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 4)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))))
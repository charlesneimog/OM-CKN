
(:patch
 (:name "some tests")
 (:doc "")
 (:info
  (:created "2021/05/24 13:08:06")
  (:modified "2021/05/24 13:47:50")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1938 1098)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name nil)
   (:x 116)
   (:y 43)
   (:w 375)
   (:h 79)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots
      ((:file-map
        (:list
         (:fstream-desc
          (:id 0)
          (:fsig "1TRC")
          (:tmin 0.0D0)
          (:tmax 6.529999732971191D0)
          (:nf 654)
          (:matrices
           (:list
            (:mstream-desc
             (:msig "1TRC")
             (:fields ("Index" "Frequency" "Amplitude" "Phase"))
             (:rmax 31)
             (:tmin 0.0D0)
             (:tmax 6.529999732971191D0)
             (:nf 654)))))))
       (:file-pathname
        (:pathname
         (:directory (:relative :back :back :back "in-files"))
         (:device nil)
         (:host "C")
         (:name "Fl-ord-A#4-pp")
         (:type "sdif")))))))
   (:id 0))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference sdif->list)
   (:group-id nil)
   (:name "sdif->list")
   (:x 256)
   (:y 127)
   (:w 96)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SDIF-FILE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name nil)
   (:x 597)
   (:y 436)
   (:w 375)
   (:h 131)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list -1 -1 -1 -1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "lport") (:value nil) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "lport") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:time-map (:list (:list -1000 0) (:list 0 7.5))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 3999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:tree (:list 1 (:list (:list (:list 4 4) (:list 4)))))
       (:lmidic (:list 8906))
       (:lonset (:list 0 4000))
       (:ldur (:list 3999))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 296))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 60)))))
   (:id 2))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 306)
   (:y 263)
   (:w 85)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference cdr)
   (:group-id nil)
   (:name "cdr")
   (:x 690)
   (:y 50)
   (:w 59)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :function)
   (:reference mat-trans)
   (:group-id nil)
   (:name "mat-trans")
   (:x 669)
   (:y 92)
   (:w 102)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 596)
   (:y 144)
   (:w 63)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference second)
   (:group-id nil)
   (:name "second")
   (:x 669)
   (:y 143)
   (:w 85)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :function)
   (:reference third)
   (:group-id nil)
   (:name "third")
   (:x 759)
   (:y 141)
   (:w 69)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 797)
   (:y 221)
   (:w 207)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 127)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "minin")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "maxin")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 837)
   (:y 186)
   (:w 42)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.0)
   (:id 10))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 874)
   (:y 146)
   (:w 42)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.0)
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 917)
   (:y 186)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 954)
   (:y 186)
   (:w 42)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 127)
   (:id 13))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 842)
   (:y 257)
   (:w 106)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 659)
   (:y 218)
   (:w 106)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 683)
   (:y 259)
   (:w 57)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "args")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 487)
   (:y 359)
   (:w 169)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 (:list (:list (:list 4 4) (:list 1)))))
   (:id 17))
  (:box
   (:type :function)
   (:reference f->mc)
   (:group-id nil)
   (:name "f->mc")
   (:x 585)
   (:y 315)
   (:w 79)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FREQ")
     (:value 440)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :function)
   (:reference acordes-de-samples)
   (:group-id nil)
   (:name "acordes-de-samples")
   (:x 658)
   (:y 725)
   (:w 172)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CKN-TIME")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MIDIC")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHANNEL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VELOCITY")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 630)
   (:y 655)
   (:w 45)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10.0)
   (:id 20))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 683)
   (:y 574)
   (:w 59)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "value box")
   (:x 943)
   (:y 363)
   (:w 34)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 879)
   (:y 363)
   (:w 42)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 296)
   (:id 23))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 860)
   (:y 578)
   (:w 59)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 772)
   (:y 576)
   (:w 59)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference check-samples-in-voice)
   (:group-id nil)
   (:name "check-samples-in-voice")
   (:x 1185)
   (:y 560)
   (:w 194)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference (:symbol "RANGE-REDUCE" "OM-JI"))
   (:group-id nil)
   (:name "range-reduce")
   (:x 662)
   (:y 359)
   (:w 127)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 4800 7200 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDA")
     (:value 7902)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 686)
   (:y 308)
   (:w 50)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7000)
   (:id 28))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 762)
   (:y 307)
   (:w 50)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9200)
   (:id 29))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference sound-mix-list)
   (:group-id nil)
   (:name "sound-mix-list")
   (:x 792)
   (:y 805)
   (:w 133)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 114)
   (:y 518)
   (:w 242)
   (:h 69)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 10000.0)
       (:n-samples 441000)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 31))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 171)
   (:y 374)
   (:w 118)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LOW")
     (:value 100)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 400)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference ckn-vst2)
   (:group-id nil)
   (:name "ckn-vst2")
   (:x 107)
   (:y 877)
   (:w 310)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND-OUT")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PLUGIN-PATH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FXP-PATH")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :function)
   (:reference save-sound)
   (:group-id nil)
   (:name "save-sound")
   (:x 178)
   (:y 677)
   (:w 114)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FILENAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 328)
   (:y 601)
   (:w 91)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "jesus.wav")
   (:id 35))
  (:box
   (:type :function)
   (:reference outfile)
   (:group-id nil)
   (:name "outfile")
   (:x 402)
   (:y 689)
   (:w 80)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 163)
   (:y 809)
   (:w 98)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "isduaf.wav")
   (:id 37))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference define-vst2-plugin)
   (:group-id nil)
   (:name "define-vst2-plugin")
   (:x 262)
   (:y 781)
   (:w 160)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PLUGIN-NAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 232)
   (:y 735)
   (:w 211)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Freeverb3VST_Impulser2.dll")
   (:id 39))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference define-fxp-presets)
   (:group-id nil)
   (:name "define-fxp-presets")
   (:x 425)
   (:y 781)
   (:w 159)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FXP-PRESETS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 40))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 455)
   (:y 739)
   (:w 114)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "sala-dark.fxp")
   (:id 41))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 530)
   (:y 909)
   (:w 242)
   (:h 69)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 10007.8)
       (:n-samples 441344)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :back :back :back "OUT-FILES"))
         (:device nil)
         (:host "C")
         (:name "isduaf")
         (:type "wav")))))))
   (:id 42)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 2 :out 2)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 2 :out 4)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 2 :out 6)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 2)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 9 :in 3)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 4)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 2 :in 1)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 2 :in 7)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 2 :in 6)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 19 :in 2)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 19 :in 3)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 2 :in 2)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 27 :in 1)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 27 :in 2)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 34 :in 1)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 33 :in 1)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 33 :in 2)))
  (:connection (:from (:box 39 :out 0)) (:to (:box 38 :in 0)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 33 :in 3)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 40 :in 0)))))